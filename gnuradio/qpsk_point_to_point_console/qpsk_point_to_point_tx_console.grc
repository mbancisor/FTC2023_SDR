options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: qpsk_tx_console
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: qpsk_tx_console
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: alpha
  id: variable
  parameters:
    comment: 'Can''t change alpha in real time

      for Consteallation Modulator'
    value: '0.50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 136.0]
    rotation: 0
    state: enabled
- name: center_freq
  id: variable
  parameters:
    comment: ''
    value: 915e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [279, 13]
    rotation: 0
    state: enabled
- name: constellation
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 2, 3]'
    type: calcdist
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [390, 9]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1008000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '16'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 76.0]
    rotation: 0
    state: true
- name: tx_attenuation
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ip:192.168.2.1
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '89'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 20.0]
    rotation: 0
    state: true
- name: blocks_message_strobe_0_0
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.cons(pmt.PMT_NIL,pmt.init_u8vector(9,(71,78,85,32,82,97,100,105,111)))
    period: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 312.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0.3'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 312.0]
    rotation: 0
    state: true
- name: blocks_packed_to_unpacked_xx_0
  id: blocks_packed_to_unpacked_xx
  parameters:
    affinity: ''
    alias: ''
    bits_per_chunk: '1'
    comment: ''
    endianness: gr.GR_MSB_FIRST
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 384.0]
    rotation: 0
    state: true
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: constellation
    differential: 'True'
    excess_bw: alpha
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 288.0]
    rotation: 0
    state: enabled
- name: digital_crc32_async_bb_0
  id: digital_crc32_async_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 320.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Block\n\"\"\"\n\nimport numpy as np\nfrom\
      \ gnuradio import gr\nimport pmt\n\nclass blk(gr.sync_block):\n    \"\"\"Packet\
      \ Format\"\"\"\n\n    def __init__(self):\n        gr.sync_block.__init__(self,\n\
      \            name = \"Packet Format\",\n            in_sig = None,\n       \
      \     out_sig = None)\n        self.message_port_register_in(pmt.intern('PDU_in'))\
      \                \t\t\t\t\n        self.message_port_register_in(pmt.intern('msg_count'))\n\
      \        self.message_port_register_out(pmt.intern('PDU_out'))\n        self.message_port_register_out(pmt.intern('msg_count'))\n\
      \        self.set_msg_handler(pmt.intern('PDU_in'), self.handle_msg)\n     \
      \   self.set_msg_handler(pmt.intern('msg_count'), self.handle_msg_count)\n \
      \       self.message_counter=0\n        \n    def get_messageCounter(self):\n\
      \        return self.message_counter\n\n    def handle_msg_count(self, msg):\n\
      \        self.message_counter=pmt.to_python(msg)[1]\n\n    def handle_msg(self,\
      \ msg):\n        inMsg = pmt.to_python (msg)\n        pld = inMsg[1]\n     \
      \   # print (pld)\n        mLen = len(pld)\n        # print (mLen)\n       \
      \ if (mLen > 0) and (self.message_counter <= 10):\n            char_list = [85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,225,90,232,147]\n\
      \            char_list.append (mLen >> 8)\n            char_list.append (mLen\
      \ & 255)\n            char_list.append (mLen >> 8)\n            char_list.append\
      \ (mLen & 255)\n            char_list.extend (pld)\n            # print (char_list)\n\
      \            out_len = len(char_list)\n            # print (out_len)\n     \
      \       self.message_port_pub(pmt.intern('PDU_out'), pmt.cons(pmt.PMT_NIL,pmt.init_u8vector(out_len,(char_list))))\n\
      \            self.message_counter+=1\n            self.message_port_pub(pmt.intern('msg_count'),\
      \ pmt.cons(pmt.PMT_NIL,pmt.from_long(self.message_counter)))\n\n    def work(self,\
      \ input_items, output_items):\n        #self.message_counter-=1\n        #self.message_port_pub(pmt.intern('msg_count'),\
      \ pmt.cons(pmt.PMT_NIL,pmt.from_long(self.message_counter)))\n        #output_items[0][:]\
      \ = input_items[0]\n        return 1#len(output_items[0])\n            \n  \
      \          \n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Packet Format', 'blk', [], [('msg_count', 'message', 1), ('PDU_in',
      'message', 1)], [('msg_count', 'message', 1), ('PDU_out', 'message', 1)], 'Packet
      Format', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 240.0]
    rotation: 0
    state: true
- name: epy_block_2
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self): \
      \ # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Message Counter Decrease',   # will show up in\
      \ GRC\n            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n\
      \        )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.message_port_register_in(pmt.intern('msg_count_in'))\n\
      \        self.message_port_register_out(pmt.intern('msg_count'))\n        self.set_msg_handler(pmt.intern('msg_count_in'),\
      \ self.handle_msg)\n        self.message_counter=0\n        \n\n    def handle_msg(self,\
      \ msg):\n        self.message_counter = pmt.to_python(msg)[1]\n\n\n    def work(self,\
      \ input_items, output_items):\n        tags = self.get_tags_in_window(0, 0,\
      \ len(input_items[0]),pmt.intern('packet_len'))\n        #print(len(tags))\n\
      \        if(len(tags)):            \n            if(self.message_counter > len(tags)):\n\
      \                self.message_counter-=len(tags)\n            else:\n      \
      \          self.message_counter=0\n            self.message_port_pub(pmt.intern('msg_count'),\
      \ pmt.cons(pmt.PMT_NIL,pmt.from_long(self.message_counter)))\n            #print(self.message_counter)\n\
      \        output_items[0][:] = input_items[0]\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Message Counter Decrease', 'blk', [], [('0', 'complex', 1), ('msg_count_in',
      'message', 1)], [('0', 'complex', 1), ('msg_count', 'message', 1)], 'Embedded
      Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 200.0]
    rotation: 0
    state: true
- name: iio_pluto_sink_0_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: tx_attenuation
    bandwidth: int(samp_rate)
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: int(center_freq)
    fstop: '0'
    len_tag_key: ''
    samplerate: int(samp_rate)
    type: fc32
    uri: 192.168.2.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 268.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 76.0]
    rotation: 0
    state: true
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 332.0]
    rotation: 0
    state: true
- name: qtgui_time_raster_sink_x_0_0
  id: qtgui_time_raster_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    mult: '[]'
    name: '""'
    ncols: '1024'
    nconnections: '1'
    nrows: '64'
    offset: '[]'
    samp_rate: samp_rate
    type: byte
    update_time: '0.10'
    x_end_value: '0.0'
    x_label: '""'
    x_start_value: '0.0'
    y_end_value: '0.0'
    y_label: '""'
    y_start_value: '0.0'
    zmax: '1'
    zmin: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 376.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Transmit re
    label10: Signal 10
    label2: Transmit im
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '0'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 424.0]
    rotation: 0
    state: enabled

connections:
- [blocks_message_strobe_0_0, strobe, digital_crc32_async_bb_0, in]
- [blocks_multiply_const_vxx_0, '0', epy_block_2, '0']
- [blocks_multiply_const_vxx_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_packed_to_unpacked_xx_0, '0', qtgui_time_raster_sink_x_0_0, '0']
- [digital_constellation_modulator_0, '0', blocks_multiply_const_vxx_0, '0']
- [digital_crc32_async_bb_0, out, epy_block_0, PDU_in]
- [epy_block_0, PDU_out, pdu_pdu_to_tagged_stream_0, pdus]
- [epy_block_0, msg_count, epy_block_2, msg_count_in]
- [epy_block_2, '0', iio_pluto_sink_0_0, '0']
- [epy_block_2, msg_count, epy_block_0, msg_count]
- [pdu_pdu_to_tagged_stream_0, '0', blocks_packed_to_unpacked_xx_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', digital_constellation_modulator_0, '0']

metadata:
  file_format: 1
